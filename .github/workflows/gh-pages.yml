name: Deploy documentation with GitHub Pages dependencies preinstalled

on:
  push:
    branches: ["develop"]
  workflow_dispatch: # enable manual workflow execution

# Set permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    # prevent this action from running on forks
    if: github.repository == 'abinit/abipy'
    defaults:
      run:
        shell: bash -l {0} # enables conda/mamba env activation by reading bash profile
    runs-on: ubuntu-latest
    steps:
      - name: Check out Abipy repo
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Installing abinit from conda-forge and abipy with python=${{ matrix.config.python }}
        run: |
            conda create -n abipy python=${{ matrix.config.python }} --yes
            conda activate abipy
            conda install abinit -c conda-forge --yes
            abinit --version
            abinit --build
            pip install . # --editable
            mkdir -p $HOME/.abinit/abipy/
            cp abipy/data/managers/travis_manager.yml $HOME/.abinit/abipy/manager.yml
            cp abipy/data/managers/simple_scheduler.yml $HOME/.abinit/abipy/scheduler.yml

      - name: Build docs with Sphinx
        run: |
            cd docs
            pip install -r requirements.txt
            make -j

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
