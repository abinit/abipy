
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/plot_ebands_edos.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_plot_ebands_edos.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_plot_ebands_edos.py:


Bands + DOS
===========

This example shows how to compute the DOS and plot a
band structure with DOS using two GSR files.

.. GENERATED FROM PYTHON SOURCE LINES 9-31



.. image:: /gallery/images/sphx_glr_plot_ebands_edos_001.png
    :alt: Si$_{2}$: $E^{dir}_{gap}$ = 2.53, $E^{fund}_{gap}$ = 0.52 (eV)
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /Users/gmatteo/miniconda3/envs/env3.9/lib/python3.9/site-packages/pymatgen/symmetry/kpath.py:179: UserWarning: The input structure does not match the expected standard primitive! The path can be incorrect. Use at your own risk.
      warn(
    /Users/gmatteo/git_repos/abipy/abipy/core/structure.py:637: FutureWarning: latexify is deprecated
    These methods have been deprecated in favor of using the Stringify mix-in class, which provides to_latex_string, to_unicode_string, etc. They will be removed in v2022.
      return latexify(self.formula)
    nscf_ebands.efermi 5.598313017568332 eV
    gs_ebands.efermi 5.598453325290463 eV






|

.. code-block:: default

    from abipy.abilab import abiopen
    import abipy.data as abidata

    # Open the file with energies computed on a k-path in the BZ
    # and extract the band structure object.
    with abiopen(abidata.ref_file("si_nscf_GSR.nc")) as nscf_file:
        nscf_ebands = nscf_file.ebands

    # Open the file with energies computed with a homogeneous sampling of the BZ
    # and extract the band structure object.
    with abiopen(abidata.ref_file("si_scf_GSR.nc")) as gs_file:
        gs_ebands = gs_file.ebands

    # Compute the DOS with the Gaussian method (use default values for
    # the broadening and the step of the linear mesh.
    edos = gs_ebands.get_edos()

    # Plot bands and DOS.
    nscf_ebands.plot_with_edos(edos, e0=None, with_gaps=True)

    print("nscf_ebands.efermi", nscf_ebands.fermie)
    print("gs_ebands.efermi", gs_ebands.fermie)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.060 seconds)


.. _sphx_glr_download_gallery_plot_ebands_edos.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_ebands_edos.py <plot_ebands_edos.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_ebands_edos.ipynb <plot_ebands_edos.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
